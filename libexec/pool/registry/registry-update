#!/usr/bin/env bash
### registry-update -- update pool list & pool metadata
### Usage: pool update <root> [<args>]
###    or: pool update [<args>]
###
### Note: for updating pool list, always run `pool registry merge` first
###
### Options:
###   -C, --calldata      only returns calldata instead of submitting the update.
###   -S, --skip-check    skip checking if data is modified on chain
###

for i in "$@"; do
  case $i in
    -C)
      CALLDATA=yes
      shift
      ;;
    --calldata)
      CALLDATA=yes
      shift
      ;;
    -S)
      SKIP_CHECK=yes
      shift
      ;;
    --skip-check)
      SKIP_CHECK=yes
      shift
      ;;
    *)
      shift
      set -- "$@" "$i"
      ;;
  esac
done

pool registry merge

POOL_ADDRESS=$1
if [ $# -lt 1 ]; then
  [[ $SKIP_CHECK != "yes" ]] && [[ $(pool registry check) == "up to date" ]] && echo "up to date" && exit
  POOL_ADDRESS=$POOL_REGISTRY_ADDRESS
  LIVE=false
  POOL_METADATA=out/pools.json || POOL_METADATA=""
  POOL_SLUG='"registry"'
else
  [[ $SKIP_CHECK != "yes" ]] && [[ $(pool registry check $1) == "up to date" ]] && echo "up to date" && exit
  LIVE=true
  POOL_METADATA="$POOL_BASE_DIR/metadata/$1.json" || POOL_METADATA=""
  POOL_SLUG="\"$(cat $POOL_METADATA | jq -r ".metadata.slug")\"" || POOL_SLUG=""
fi


if [ $POOL_METADATA = "" ]; then
    echo "Your pool metadata file at $POOL_METADATA is empty!"
    exit 1
fi

if [ $POOL_SLUG = "" ]; then
    echo "Your pool slug is empty!"
    exit 1
fi

POOL_PROFILE="$POOL_BASE_DIR/profiles/$1.json" || POOL_PROFILE=""
PROFILE_HASH=""
if test -f "$POOL_PROFILE"; then
    PROFILE_HASH="\"$(pool ipfs save $POOL_PROFILE profile)\""
    METADATA_HASH="\"$(pool ipfs save $POOL_METADATA metadata $PROFILE_HASH)\""
else
    METADATA_HASH="\"$(pool ipfs save $POOL_METADATA metadata)\""
fi

[[ $CALLDATA == "yes" ]] && printf "\nThese are your calldata inputs:\npool address: $POOL_ADDRESS \nlive pool: $LIVE \npool slug: $POOL_SLUG \nmetadata hash: $METADATA_HASH\n" && seth calldata 'file(address, bool, string, string)' $POOL_ADDRESS $LIVE $POOL_SLUG $METADATA_HASH
[[ $CALLDATA != "yes" ]] && echo "Do you want to proceed with updating the pool registry $POOL_REGISTRY_ADDRESS with pool $POOL_ADDRESS on $(seth chain), with metadata $METADATA_HASH?"

select yn in "yes" "no"
do
  case $yn in
      "yes") seth send $POOL_REGISTRY_ADDRESS 'file(address, bool, string, string)' $POOL_ADDRESS $LIVE $POOL_SLUG $METADATA_HASH;;
      "no") exit;;
  esac
done

